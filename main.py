import os
from flask import Flask, request
from telegram import Update, Bot, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters

# рж╕рж░рж╛рж╕рж░рж┐ Token ржмрж╕рж╛ржирзЛ рж╣рж▓рзЛ
TOKEN = "8386188290:AAEW2I-fBiWr-goPDaVamm39VmGR6WuKZ-A"
bot = Bot(TOKEN)

# Flask app
app = Flask(__name__)

# Telegram Application
application = Application.builder().token(TOKEN).build()

# ---------- Commands ----------
# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["ЁЯТ░ MY Account", "ЁЯТм Support"],
        ["тЬиЁЯТеReferralЁЯТетЬи", "ЁЯТ╡ Balance"],
        ["тЪая╕П Rules тЪая╕П", "тЬЕ Withdraw ЁЯТп"],
        ["тЭЧЁЯФе How do you do income ЁЯФетЭЧ"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        "рж╣рзНржпрж╛рж▓рзЛ ЁЯСЛ ржЖржорж┐ ржЪрж╛рж▓рзБ ржЖржЫрж┐!\nржирж┐ржЪрзЗрж░ ржорзЗржирзБ ржерзЗржХрзЗ ржпрзЗржХрзЛржирзЛ ржПржХржЯрж┐ ржмрзЗржЫрзЗ ржирж╛ржУ:",
        reply_markup=reply_markup
    )

# /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("ржЖржорж┐ рждрзЛржорж╛ржХрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рж╛рж░ ржЬржирзНржп ржПржЦрж╛ржирзЗ ржЖржЫрж┐! ЁЯШК")

# /about
async def about(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "ржЖржорж╛рж░ ржирж┐ржЬрзЗрж░ рж╣рж╛рждрзЗ рждрзИрж░рж┐ ржПржХржЯрж┐ ржЫрзЛржЯрзНржЯ рж╕рж╣ржХрж╛рж░рзА тАФ рж╕ржмрж╕ржорзЯ ржкрзНрж░рж╕рзНрждрзБржд рждрзЛржорж╛рж░ ржХрж╛ржЬрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рж╛рж░ ржЬржирзНржп!"
    )

# /tips
async def tips(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "ржЖржорж╛рж░ рж╕ржорзНржкрж░рзНржХрзЗ ржЖрж░рзЛ ржЬрж╛ржирждрзЗ ржЪрж╛ржЗрж▓рзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи ЁЯСЙ https://t.me/sr_sadiya_official"
    )

# ---------- Text Button Handler ----------
async def button_response(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == "ЁЯТ░ MY Account":
        await update.message.reply_text("ЁЯз╛ рждрзЛржорж╛рж░ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯрзЗрж░ рждржерзНржп ржПржЦрж╛ржирзЗ!")
    elif text == "ЁЯТм Support":
        await update.message.reply_text("ЁЯУй рж╕рж╛ржкрзЛрж░рзНржЯрзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи: @YourSupportID")
    elif text == "ЁЯТ╡ Balance":
        await update.message.reply_text("ЁЯТ╕ рждрзЛржорж╛рж░ ржмрж░рзНрждржорж╛ржи ржмрзНржпрж╛рж▓рзЗржирзНрж╕: 0рз│")
    elif text == "тЬиЁЯТеReferralЁЯТетЬи":
        await update.message.reply_text("ЁЯФЧ рждрзЛржорж╛рж░ рж░рзЗржлрж╛рж░рзЗрж▓ рж▓рж┐ржВржХ: https://t.me/YourBot?start=ref123")
    elif text == "тЪая╕П Rules тЪая╕П":
        await update.message.reply_text("ЁЯУЬ ржирж┐рзЯржорж╛ржмрж▓рзА: ржПржЦрж╛ржирзЗ ржирж┐рзЯржо рж▓рзЗржЦрж╛ ржерж╛ржХржмрзЗред")
    elif text == "тЬЕ Withdraw ЁЯТп":
        await update.message.reply_text("тЬЕ ржирзНржпрзВржирждржо рзлрзжрз│ рж╣рж▓рзЗ рждрзБржорж┐ ржЙржЗржержбрзНрж░ ржХрж░рждрзЗ ржкрж╛рж░рзЛред")
    elif text == "тЭЧЁЯФе How do you do income ЁЯФетЭЧ":
        await update.message.reply_text("ЁЯОБ ржЗржиржХрж╛ржо ржХрж░рж╛рж░ ржирж┐рзЯржо: ржмржирзНржзрзБржжрзЗрж░ рж░рзЗржлрж╛рж░ ржХрж░рзЛ, ржмрзЛржирж╛рж╕ ржкрж╛ржУ!")
    else:
        await update.message.reply_text("тЭУ ржЖржорж┐ ржПржЗ ржЯрзЗржХрзНрж╕ржЯ ржЪрж┐ржирждрзЗ ржкрж╛рж░рж┐ржирж┐ред")

# ---------- Handlers ----------
application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("help", help_command))
application.add_handler(CommandHandler("about", about))
application.add_handler(CommandHandler("tips", tips))
application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, button_response))

# ---------- Webhook Routes ----------
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    application.update_queue.put_nowait(update)
    return "ok"

@app.route("/")
def index():
    return "Bot is running with Webhook тЬЕ"

if __name__ == "__main__":
    PORT = int(os.environ.get("PORT", 10000))  # Render default port 10000
    app.run(host="0.0.0.0", port=PORT)
